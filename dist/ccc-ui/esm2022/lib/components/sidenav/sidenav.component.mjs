import { CommonModule } from "@angular/common";
import { Component, DestroyRef, inject, Input } from "@angular/core";
import { takeUntilDestroyed } from "@angular/core/rxjs-interop";
import { MatButtonModule } from "@angular/material/button";
import { MatExpansionModule } from "@angular/material/expansion";
import { MatIconModule } from "@angular/material/icon";
import { MatSidenavModule } from "@angular/material/sidenav";
import { RouterModule } from "@angular/router";
import { Store } from "@ngxs/store";
import { tap } from "rxjs";
import { HasPermissionDirective } from "../../directives/has-permission.directive";
import { CoreState } from "../../state/core.state";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/icon";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
export class SidenavComponent {
    store = inject(Store);
    destroyRef = inject(DestroyRef);
    navGroups;
    currentNav = [];
    hasPermissionFn = this.store.select(CoreState.hasPermission);
    ngOnInit() {
        this.store
            .select(CoreState.currentSidenavIdentifier)
            .pipe(tap((identifier) => {
            this.currentNav = this.updateNavItems(identifier);
        }), takeUntilDestroyed(this.destroyRef))
            .subscribe();
    }
    /**
     * Updates the currentNav based on the identifier
     * @param identifier
     * @returns NavItem[]
     * @memberof SidenavComponent
     */
    updateNavItems(identifier) {
        if (!this.navGroups) {
            return [];
        }
        if (!this.navGroups[identifier]) {
            // pick the first one if the identifier is not found so we don't break the UI
            identifier = Object.keys(this.navGroups)[0];
        }
        return this.navGroups[identifier];
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.7", ngImport: i0, type: SidenavComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.7", type: SidenavComponent, isStandalone: true, selector: "app-sidenav", inputs: { navGroups: "navGroups" }, ngImport: i0, template: "<div class=\"nav-container\">\n  <nav>\n    @for (navItem of currentNav; track navItem.label) {\n      <ng-container *ngTemplateOutlet=\"typeRendererTemplate; context: { navItem: navItem }\"></ng-container>\n    }\n  </nav>\n</div>\n<ng-template #typeRendererTemplate let-navItem=\"navItem\">\n  @switch (navItem.type) {\n    @case ('header') {\n      <ng-container [ngTemplateOutlet]=\"headerTemplate\" [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n    @case ('link') {\n      <ng-container [ngTemplateOutlet]=\"linkTemplate\" [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n    @case ('expandable') {\n      <ng-container\n        [ngTemplateOutlet]=\"expandableTemplate\"\n        [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n  }\n</ng-template>\n<ng-template #headerTemplate let-navItem=\"navItem\">\n  <div class=\"link-header\">{{ navItem.label }}</div>\n</ng-template>\n<ng-template #linkTemplate let-navItem=\"navItem\">\n  @if (navItem.permissions.length === 0) {\n    <a [routerLink]=\"navItem.routerLink\">\n      <div class=\"nav-item\" routerLinkActive=\"active-link\">\n        <div class=\"link-button\">\n          <div class=\"icon\">\n            <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n              {{ navItem.icon }}\n            </mat-icon>\n          </div>\n          <div class=\"text\">\n            {{ navItem.label | titlecase }}\n          </div>\n        </div>\n      </div>\n    </a>\n  }\n  @if (navItem.permissions.length > 0) {\n    <a [routerLink]=\"navItem.routerLink\" *appHasPermission=\"navItem.permissions\">\n      <ng-container *ngTemplateOutlet=\"navItemTemplate\"></ng-container>\n    </a>\n  }\n  <ng-template #navItemTemplate>\n    <div class=\"nav-item\" routerLinkActive=\"active-link\">\n      <div class=\"link-button\">\n        <div class=\"icon\">\n          <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n            {{ navItem.icon }}\n          </mat-icon>\n        </div>\n        <div class=\"text\">\n          {{ navItem.label | titlecase }}\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n<ng-template #expandableTemplate let-navItem=\"navItem\">\n  <div class=\"nav-item\" aria-hidden=\"true\" (click)=\"navItem.isExpanded = !navItem.isExpanded\">\n    <div class=\"link-button\">\n      <div class=\"icon\">\n        <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n          {{ navItem.isExpanded ? 'expand_less' : 'expand_more' }}\n        </mat-icon>\n      </div>\n      <div class=\"text\">{{ navItem.label }}</div>\n    </div>\n  </div>\n  @if (navItem.isExpanded) {\n    <div class=\"expandable-links\">\n      @for (navItemChild of navItem.children; track navItemChild) {\n        <ng-container *ngTemplateOutlet=\"typeRendererTemplate; context: { navItem: navItemChild }\"> </ng-container>\n      }\n    </div>\n  }\n</ng-template>\n", styles: [".nav-container{padding:0;height:100%}nav{max-width:100%;margin:0 10px}.nav-item{width:100%;height:48px;font-size:18px;display:flex;flex-direction:column;justify-content:center;color:#003b49;padding:0 15px;position:relative}.nav-item:hover{background-color:#0000000a;transition:background-color .1s ease}.nav-item:active{background-color:#0000001a;transition:background-color .1s ease}.link-header{color:#003b49;text-transform:uppercase;font-weight:700;font-size:12px;margin:20px 0 0 5px}.link-button{display:flex;flex-direction:row;width:100%}.link-button .icon{min-width:20px;margin-right:10px;display:flex;flex-direction:column;justify-content:center}.link-button .text{margin-right:10px;text-align:left;display:flex;flex-direction:row;justify-content:left;text-decoration:capitalize}.expandable-links{display:flex;flex-direction:column;width:100%;padding-left:30px}a:active,a:link,a:visited{color:#003b49!important}a{text-decoration:none}.active-link:before{content:\"\";position:absolute;left:3px;width:5px;height:38px;background-color:#003b49}.active-link{background-color:#0000000a;position:relative}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i2.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i2.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i3.TitleCasePipe, name: "titlecase" }, { kind: "ngmodule", type: MatExpansionModule }, { kind: "ngmodule", type: MatButtonModule }, { kind: "directive", type: HasPermissionDirective, selector: "[appHasPermission]", inputs: ["appHasPermission"] }, { kind: "ngmodule", type: MatSidenavModule }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.7", ngImport: i0, type: SidenavComponent, decorators: [{
            type: Component,
            args: [{ selector: "app-sidenav", standalone: true, imports: [
                        MatIconModule,
                        RouterModule,
                        CommonModule,
                        MatExpansionModule,
                        MatButtonModule,
                        HasPermissionDirective,
                        MatSidenavModule,
                    ], template: "<div class=\"nav-container\">\n  <nav>\n    @for (navItem of currentNav; track navItem.label) {\n      <ng-container *ngTemplateOutlet=\"typeRendererTemplate; context: { navItem: navItem }\"></ng-container>\n    }\n  </nav>\n</div>\n<ng-template #typeRendererTemplate let-navItem=\"navItem\">\n  @switch (navItem.type) {\n    @case ('header') {\n      <ng-container [ngTemplateOutlet]=\"headerTemplate\" [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n    @case ('link') {\n      <ng-container [ngTemplateOutlet]=\"linkTemplate\" [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n    @case ('expandable') {\n      <ng-container\n        [ngTemplateOutlet]=\"expandableTemplate\"\n        [ngTemplateOutletContext]=\"{ navItem: navItem }\"></ng-container>\n    }\n  }\n</ng-template>\n<ng-template #headerTemplate let-navItem=\"navItem\">\n  <div class=\"link-header\">{{ navItem.label }}</div>\n</ng-template>\n<ng-template #linkTemplate let-navItem=\"navItem\">\n  @if (navItem.permissions.length === 0) {\n    <a [routerLink]=\"navItem.routerLink\">\n      <div class=\"nav-item\" routerLinkActive=\"active-link\">\n        <div class=\"link-button\">\n          <div class=\"icon\">\n            <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n              {{ navItem.icon }}\n            </mat-icon>\n          </div>\n          <div class=\"text\">\n            {{ navItem.label | titlecase }}\n          </div>\n        </div>\n      </div>\n    </a>\n  }\n  @if (navItem.permissions.length > 0) {\n    <a [routerLink]=\"navItem.routerLink\" *appHasPermission=\"navItem.permissions\">\n      <ng-container *ngTemplateOutlet=\"navItemTemplate\"></ng-container>\n    </a>\n  }\n  <ng-template #navItemTemplate>\n    <div class=\"nav-item\" routerLinkActive=\"active-link\">\n      <div class=\"link-button\">\n        <div class=\"icon\">\n          <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n            {{ navItem.icon }}\n          </mat-icon>\n        </div>\n        <div class=\"text\">\n          {{ navItem.label | titlecase }}\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n<ng-template #expandableTemplate let-navItem=\"navItem\">\n  <div class=\"nav-item\" aria-hidden=\"true\" (click)=\"navItem.isExpanded = !navItem.isExpanded\">\n    <div class=\"link-button\">\n      <div class=\"icon\">\n        <mat-icon class=\"material-icons-outlined\" [inline]=\"true\">\n          {{ navItem.isExpanded ? 'expand_less' : 'expand_more' }}\n        </mat-icon>\n      </div>\n      <div class=\"text\">{{ navItem.label }}</div>\n    </div>\n  </div>\n  @if (navItem.isExpanded) {\n    <div class=\"expandable-links\">\n      @for (navItemChild of navItem.children; track navItemChild) {\n        <ng-container *ngTemplateOutlet=\"typeRendererTemplate; context: { navItem: navItemChild }\"> </ng-container>\n      }\n    </div>\n  }\n</ng-template>\n", styles: [".nav-container{padding:0;height:100%}nav{max-width:100%;margin:0 10px}.nav-item{width:100%;height:48px;font-size:18px;display:flex;flex-direction:column;justify-content:center;color:#003b49;padding:0 15px;position:relative}.nav-item:hover{background-color:#0000000a;transition:background-color .1s ease}.nav-item:active{background-color:#0000001a;transition:background-color .1s ease}.link-header{color:#003b49;text-transform:uppercase;font-weight:700;font-size:12px;margin:20px 0 0 5px}.link-button{display:flex;flex-direction:row;width:100%}.link-button .icon{min-width:20px;margin-right:10px;display:flex;flex-direction:column;justify-content:center}.link-button .text{margin-right:10px;text-align:left;display:flex;flex-direction:row;justify-content:left;text-decoration:capitalize}.expandable-links{display:flex;flex-direction:column;width:100%;padding-left:30px}a:active,a:link,a:visited{color:#003b49!important}a{text-decoration:none}.active-link:before{content:\"\";position:absolute;left:3px;width:5px;height:38px;background-color:#003b49}.active-link{background-color:#0000000a;position:relative}\n"] }]
        }], propDecorators: { navGroups: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,